name: Deploy foodietree front

on:
  push:
    branches:
      - deploy

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: checkout
        uses: actions/checkout@v4

      - name: == React app build ==
        uses: actions/setup-node@v4
        with:
          node-version: '20'

      - name: Install modules
        run: npm install

      - name: Build
        run: |
          echo "${{ secrets.ENV }}" > .env
          CI=false npm run build

      - name: docker image build
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
          docker build --no-cache -t ${{ secrets.DOCKER_USERNAME }}/foodie-app:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/foodie-app:latest

  conn-remote-exec:
    runs-on: ubuntu-latest
    steps:
      - name: == host CI/CD ==
        uses: appleboy/ssh-action@master
        with:
          username: ${{ secrets.NAME }}
          host: ${{ secrets.HOST }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            
            export PATH=$PATH:/usr/local/bin
            
            mkdir -p foodie-app
            
            cd ./foodie-app
            mkdir -p cert
            echo "${{ secrets.DOCKER_YML }}" > ./docker-compose.yml
            echo "${{ secrets.CERTI_CRT }}" > ./cert/certi.crt
            echo "${{ secrets.SSL_PRIVATE_KEY }}" > ./cert/private.key
            echo "${{ secrets.NGINX_CONF }}" > ./nginx.conf
            
  
            docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKERHUB_PASSWORD }}
  
            echo "Stopping existing container..."
            docker compose down --remove-orphans || true
            
            echo "Pulling Docker image..."
            docker pull ${{ secrets.DOCKER_USERNAME }}/foodie-app:latest
            
            echo "Starting new container..."
            docker compose up -d

#      - name: Discord Alert Success
#        uses: sarisia/actions-status-discord@v1
#        if: success()
#        with:
#            webhook: ${{ secrets.DISCORD_WEBHOOK }}
#            description: "사이트가 배포되었습니다!"
#
#      - name: Discord Alert Failure
#        uses: sarisia/actions-status-discord@v1
#        if: failure()
#        with:
#          webhook: ${{ secrets.DISCORD_WEBHOOK }}
#          description: "사이트 배포를 실패하였습니다."


